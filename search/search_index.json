{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"build/build/","text":"OpenCV \u00b6 Build OpenCV 4.5.2 with cuda support ubuntu 20.04 Nvidia MX450 (nvidia-driver-470) Check \u00b6 nvidia-smi Install cuda \u00b6 CUDA Toolkit 11.5 Update 1 Downloads Install OpenCV \u00b6 How to install OpenCV 4.5.2 with CUDA 11.2 and CUDNN 8.2 in Ubuntu 20.04 cmake -D CMAKE_BUILD_TYPE=RELEASE \\ -D CMAKE_INSTALL_PREFIX=/usr/local \\ -D WITH_TBB=ON \\ -D ENABLE_FAST_MATH=1 \\ -D CUDA_FAST_MATH=1 \\ -D WITH_CUBLAS=1 \\ -D WITH_CUDA=ON \\ -D BUILD_opencv_cudacodec=OFF \\ -D WITH_CUDNN=OFF \\ -D OPENCV_DNN_CUDA=OFF \\ -D WITH_V4L=ON \\ -D WITH_QT=OFF \\ -D WITH_OPENGL=ON \\ -D WITH_GSTREAMER=ON \\ -D OPENCV_GENERATE_PKGCONFIG=ON \\ -D OPENCV_PC_FILE_NAME=opencv.pc \\ -D OPENCV_ENABLE_NONFREE=ON \\ -D OPENCV_EXTRA_MODULES_PATH=~/Downloads/opencv_contrib-4.5.2/modules \\ -D INSTALL_PYTHON_EXAMPLES=OFF \\ -D INSTALL_C_EXAMPLES=OFF \\ -D BUILD_EXAMPLES=OFF .. Note If opencv not find CUDA set `` variable export CUDA_PATH=/usr/local/cuda-11.5 TODO: cuDNN \u00b6 CUDNN_INCLUDE_DIR:PATH=/home/user/Downloads/cudnn/include -D CUDNN_INCLUDE_DIR=/usr/include/cudnn.h CUDNN_LIBRARY:FILEPATH=/home/user/Downloads/cudnn/lib64/libcudnn.so -D CUDNN_LIBRARY-/usr/lib/x86_64-linux-gnu/libcudnn.so Check \u00b6 import cv2 cv2 . __version__ # '4.5.2' cv2 . cuda . getCudaEnabledDeviceCount () # 1 print ( cv2 . getBuildInformation ()) # NVIDIA CUDA: YES (ver 11.5, CUFFT CUBLAS FAST_MATH) # NVIDIA GPU arch: 35 37 50 52 60 61 70 75 80 86 # NVIDIA PTX archs:","title":"OpenCV"},{"location":"build/build/#opencv","text":"Build OpenCV 4.5.2 with cuda support ubuntu 20.04 Nvidia MX450 (nvidia-driver-470)","title":"OpenCV"},{"location":"build/build/#check","text":"nvidia-smi","title":"Check"},{"location":"build/build/#install-cuda","text":"CUDA Toolkit 11.5 Update 1 Downloads","title":"Install cuda"},{"location":"build/build/#install-opencv","text":"How to install OpenCV 4.5.2 with CUDA 11.2 and CUDNN 8.2 in Ubuntu 20.04 cmake -D CMAKE_BUILD_TYPE=RELEASE \\ -D CMAKE_INSTALL_PREFIX=/usr/local \\ -D WITH_TBB=ON \\ -D ENABLE_FAST_MATH=1 \\ -D CUDA_FAST_MATH=1 \\ -D WITH_CUBLAS=1 \\ -D WITH_CUDA=ON \\ -D BUILD_opencv_cudacodec=OFF \\ -D WITH_CUDNN=OFF \\ -D OPENCV_DNN_CUDA=OFF \\ -D WITH_V4L=ON \\ -D WITH_QT=OFF \\ -D WITH_OPENGL=ON \\ -D WITH_GSTREAMER=ON \\ -D OPENCV_GENERATE_PKGCONFIG=ON \\ -D OPENCV_PC_FILE_NAME=opencv.pc \\ -D OPENCV_ENABLE_NONFREE=ON \\ -D OPENCV_EXTRA_MODULES_PATH=~/Downloads/opencv_contrib-4.5.2/modules \\ -D INSTALL_PYTHON_EXAMPLES=OFF \\ -D INSTALL_C_EXAMPLES=OFF \\ -D BUILD_EXAMPLES=OFF .. Note If opencv not find CUDA set `` variable export CUDA_PATH=/usr/local/cuda-11.5","title":"Install OpenCV"},{"location":"build/build/#todo-cudnn","text":"CUDNN_INCLUDE_DIR:PATH=/home/user/Downloads/cudnn/include -D CUDNN_INCLUDE_DIR=/usr/include/cudnn.h CUDNN_LIBRARY:FILEPATH=/home/user/Downloads/cudnn/lib64/libcudnn.so -D CUDNN_LIBRARY-/usr/lib/x86_64-linux-gnu/libcudnn.so","title":"TODO: cuDNN"},{"location":"build/build/#check_1","text":"import cv2 cv2 . __version__ # '4.5.2' cv2 . cuda . getCudaEnabledDeviceCount () # 1 print ( cv2 . getBuildInformation ()) # NVIDIA CUDA: YES (ver 11.5, CUFFT CUBLAS FAST_MATH) # NVIDIA GPU arch: 35 37 50 52 60 61 70 75 80 86 # NVIDIA PTX archs:","title":"Check"},{"location":"build/cuda/","text":"Cuda \u00b6 Profiler \u00b6 NVIDIA Visual Profiler \u00b6 nvvp !!! sudo apt install libcanberra-gtk-module libcanberra-gtk3-module References \u00b6 OpenCV optimization GPU-Accelerated Vision for Robots with OpenCV and CUDA","title":"Cuda"},{"location":"build/cuda/#cuda","text":"","title":"Cuda"},{"location":"build/cuda/#profiler","text":"","title":"Profiler"},{"location":"build/cuda/#nvidia-visual-profiler","text":"nvvp !!! sudo apt install libcanberra-gtk-module libcanberra-gtk3-module","title":"NVIDIA Visual Profiler"},{"location":"build/cuda/#references","text":"OpenCV optimization GPU-Accelerated Vision for Robots with OpenCV and CUDA","title":"References"},{"location":"cuda/","text":"Getting Started with OpenCV CUDA Module","title":"Index"},{"location":"nano/jupyter/","text":"Setup \u00b6 Download image from img pip3 install --upgrade pip pip3 install --user jupyterlab export PATH = $PATH :/home/jetson/.local/bin # add this line to .bashrc echo \"export PATH= $PATH :/home/jetson/.local/bin\" >> .bashrc jupyter notebook --generate-config jupyter notebook password # /home/jetson/.jupyter/jupyter_notebook_config.json # c.NotebookApp.ip = '0.0.0.0' # listen on all IPs # Run jupyter lab Reference - jupyter nano","title":"Setup"},{"location":"nano/jupyter/#setup","text":"Download image from img pip3 install --upgrade pip pip3 install --user jupyterlab export PATH = $PATH :/home/jetson/.local/bin # add this line to .bashrc echo \"export PATH= $PATH :/home/jetson/.local/bin\" >> .bashrc jupyter notebook --generate-config jupyter notebook password # /home/jetson/.jupyter/jupyter_notebook_config.json # c.NotebookApp.ip = '0.0.0.0' # listen on all IPs # Run jupyter lab Reference - jupyter nano","title":"Setup"},{"location":"openmv/readme/","text":"- mavlink_opticalflow","title":"Readme"}]}